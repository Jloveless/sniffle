%% script generated at {2012,8,8} {1,57,28}
{script,
    {"start_clean",[]},
    [{preLoaded,
         [erl_prim_loader,erlang,init,otp_ring0,prim_file,prim_inet,prim_zip,
          zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-2.15.1/ebin","$ROOT/lib/stdlib-1.18.1/ebin"]},
     {primLoad,[error_handler]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-2.15.1/ebin"]},
     {primLoad,
         [application,application_controller,application_master,
          application_starter,auth,code,code_server,disk_log,disk_log_1,
          disk_log_server,disk_log_sup,dist_ac,dist_util,erl_boot_server,
          erl_ddll,erl_distribution,erl_epmd,erl_reply,error_logger,
          erts_debug,file,file_io_server,file_server,gen_sctp,gen_tcp,gen_udp,
          global,global_group,global_search,group,heart,hipe_unified_loader,
          inet,inet6_sctp,inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,
          inet_db,inet_dns,inet_gethost_native,inet_hosts,inet_parse,inet_res,
          inet_sctp,inet_tcp,inet_tcp_dist,inet_udp,kernel,kernel_config,net,
          net_adm,net_kernel,os,packages,pg2,ram_file,rpc,seq_trace,
          standard_error,user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-1.18.1/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v8,dets_v9,dict,digraph,digraph_utils,edlin,
          edlin_expand,epp,erl_bits,erl_compile,erl_eval,erl_expand_records,
          erl_internal,erl_lint,erl_parse,erl_posix_msg,erl_pp,erl_scan,
          erl_tar,error_logger_file_h,error_logger_tty_h,escript,ets,
          eval_bits,file_sorter,filelib,filename,gb_sets,gb_trees,gen,
          gen_event,gen_fsm,gen_server,io,io_lib,io_lib_format,io_lib_fread,
          io_lib_pretty,lib,lists,log_mf_h,math,ms_transform,orddict,ordsets,
          otp_internal,pg,pool,proc_lib,proplists,qlc,qlc_pt,queue,random,re,
          sets,shell,shell_default,slave,sofs,string,supervisor,
          supervisor_bridge,sys,timer,unicode,win32reg,zip]},
     {path,["$ROOT/lib/sasl-2.2.1/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,overload,rb,
          rb_format_supp,release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,si,si_sasl_supp,systools,
          systools_lib,systools_make,systools_rc,systools_relup]},
     {path,["$ROOT/lib/alog-1/ebin"]},
     {primLoad,
         [alog,alog_common_formatter,alog_config,alog_control,alog_disk_log,
          alog_error_logger_handler,alog_examples,alog_if_default,
          alog_parse_trans,alog_pt,alog_scribe,alog_sup,alog_syslog,
          alog_test_logger_iface,alog_tests,alog_tty,facebookService_thrift,
          gen_alog,scribe_thrift,scribe_types]},
     {path,["$ROOT/lib/mdns-0.1.0/ebin"]},
     {primLoad,
         [mdns,mdns_application,mdns_discovery_connect_node_handler,
          mdns_node_discovery,mdns_node_discovery_event,
          mdns_node_discovery_server,mdns_supervisor]},
     {path,["$ROOT/lib/backyard-0.1.0/ebin"]},
     {primLoad,[backyard_app,backyard_quorum,backyard_srv,backyard_sup]},
     {path,["$ROOT/lib/compiler-4.8.1/ebin"]},
     {primLoad,
         [beam_asm,beam_block,beam_bool,beam_bsm,beam_clean,beam_dead,
          beam_dict,beam_disasm,beam_except,beam_flatten,beam_jump,
          beam_listing,beam_opcodes,beam_peep,beam_receive,beam_split,
          beam_trim,beam_type,beam_utils,beam_validator,cerl,cerl_clauses,
          cerl_inline,cerl_trees,compile,core_lib,core_lint,core_parse,
          core_pp,core_scan,erl_bifs,rec_env,sys_core_dsetel,sys_core_fold,
          sys_core_inline,sys_expand_pmod,sys_pre_attributes,sys_pre_expand,
          v3_codegen,v3_core,v3_kernel,v3_kernel_pp,v3_life]},
     {path,["$ROOT/lib/crypto-2.1/ebin"]},
     {primLoad,[crypto,crypto_app,crypto_server,crypto_sup]},
     {path,["$ROOT/lib/syntax_tools-1.6.8/ebin"]},
     {primLoad,
         [epp_dodger,erl_comment_scan,erl_prettypr,erl_recomment,erl_syntax,
          erl_syntax_lib,erl_tidy,igor,prettypr]},
     {path,["$ROOT/lib/edoc-0.7.9.1/ebin"]},
     {primLoad,
         [edoc,edoc_data,edoc_doclet,edoc_extract,edoc_layout,edoc_lib,
          edoc_macros,edoc_parser,edoc_refs,edoc_report,edoc_run,edoc_scanner,
          edoc_specs,edoc_tags,edoc_types,edoc_wiki,otpsgml_layout]},
     {path,["$ROOT/lib/edown-0.2.9/ebin"]},
     {primLoad,[edown_doclet,edown_layout,edown_lib,edown_make,edown_xmerl]},
     {path,["$ROOT/lib/public_key-0.15/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_pbe,pubkey_pem,pubkey_ssh,public_key]},
     {path,["$ROOT/lib/ssl-5.0.1/ebin"]},
     {primLoad,
         [inet_tls_dist,ssl,ssl_alert,ssl_app,ssl_certificate,
          ssl_certificate_db,ssl_cipher,ssl_connection,ssl_connection_sup,
          ssl_debug,ssl_dist_sup,ssl_handshake,ssl_manager,ssl_record,
          ssl_session,ssl_session_cache,ssl_session_cache_api,ssl_ssl2,
          ssl_ssl3,ssl_sup,ssl_tls1,ssl_tls_dist_proxy]},
     {path,["$ROOT/lib/lhttpc-1.2.6/ebin"]},
     {primLoad,
         [lhttpc,lhttpc_client,lhttpc_lib,lhttpc_manager,lhttpc_sock,
          lhttpc_sup]},
     {path,["$ROOT/lib/erllibcloudapi-0.1.5/ebin"]},
     {primLoad,[bark,cloudapi]},
     {path,["$ROOT/lib/gen_leader-1.0/ebin"]},
     {primLoad,[gen_leader]},
     {path,["$ROOT/lib/gproc-0.2.10/ebin"]},
     {primLoad,[gproc,gproc_app,gproc_dist,gproc_init,gproc_lib,gproc_sup]},
     {path,["$ROOT/lib/inets-5.9/ebin"]},
     {primLoad,
         [ftp,ftp_progress,ftp_response,ftp_sup,http_chunk,http_request,
          http_response,http_transport,http_uri,http_util,httpc,httpc_cookie,
          httpc_handler,httpc_handler_sup,httpc_manager,httpc_profile_sup,
          httpc_request,httpc_response,httpc_sup,httpd,httpd_acceptor,
          httpd_acceptor_sup,httpd_cgi,httpd_conf,httpd_esi,httpd_example,
          httpd_file,httpd_instance_sup,httpd_log,httpd_manager,
          httpd_misc_sup,httpd_request,httpd_request_handler,httpd_response,
          httpd_script_env,httpd_socket,httpd_sup,httpd_util,inets,inets_app,
          inets_regexp,inets_service,inets_sup,inets_trace,mod_actions,
          mod_alias,mod_auth,mod_auth_dets,mod_auth_mnesia,mod_auth_plain,
          mod_auth_server,mod_browser,mod_cgi,mod_dir,mod_disk_log,mod_esi,
          mod_get,mod_head,mod_htaccess,mod_include,mod_log,mod_range,
          mod_responsecontrol,mod_security,mod_security_server,mod_trace,tftp,
          tftp_binary,tftp_engine,tftp_file,tftp_lib,tftp_logger,tftp_sup]},
     {path,["$ROOT/lib/nicedecimal-1.0/ebin"]},
     {primLoad,[nicedecimal]},
     {path,["$ROOT/lib/jsx-1.1.2/ebin"]},
     {primLoad,
         [jsx,jsx_decoder,jsx_encoder,jsx_to_json,jsx_to_term,jsx_utils,
          jsx_verify]},
     {path,["$ROOT/lib/lager-1.0.0/ebin"]},
     {primLoad,
         [error_logger_lager_h,lager,lager_app,lager_console_backend,
          lager_crash_log,lager_file_backend,lager_format,
          lager_handler_watcher,lager_handler_watcher_sup,lager_mochiglobal,
          lager_stdlib,lager_sup,lager_transform,lager_trunc_io,lager_util]},
     {path,["$ROOT/lib/libchunter-0.1.2/ebin"]},
     {primLoad,[libchunter,libchunter_app,libchunter_sup]},
     {path,["$ROOT/lib/libsnarl-0.1.4/ebin"]},
     {primLoad,[libsnarl,libsnarl_app,libsnarl_sup]},
     {path,["$ROOT/lib/meck-0.7.2/ebin"]},
     {primLoad,[meck,meck_cover,meck_mod]},
     {path,["$ROOT/lib/parse_trans-2.4-1-g11f137a/ebin"]},
     {primLoad,
         [ct_expand,exprecs,parse_trans,parse_trans_codegen,parse_trans_mod,
          parse_trans_pp]},
     {path,["$ROOT/lib/redo/ebin"]},
     {primLoad,[]},
     {path,["$ROOT/lib/uuid-0.3.3/ebin"]},
     {primLoad,[uuid]},
     {path,["$ROOT/lib/statsderl-0.2/ebin"]},
     {primLoad,[statsderl,statsderl_app,statsderl_sup]},
     {path,["$ROOT/lib/vmstats-0.1/ebin"]},
     {primLoad,[vmstats,vmstats_server,vmstats_sup]},
     {path,["$ROOT/lib/sniffle-0.2.0/ebin"]},
     {primLoad,
         [sniffle_app,sniffle_host_srv,sniffle_host_sup,sniffle_impl,
          sniffle_impl_bark,sniffle_impl_chunter,sniffle_impl_cloudapi,
          sniffle_server,sniffle_sup]},
     {path,["$ROOT/lib/syslog-0.0.1/ebin"]},
     {primLoad,[syslog,syslog_app,syslog_sup]},
     {progress,modules_loaded},
     {path,
         ["$ROOT/lib/kernel-2.15.1/ebin","$ROOT/lib/stdlib-1.18.1/ebin",
          "$ROOT/lib/sasl-2.2.1/ebin","$ROOT/lib/alog-1/ebin",
          "$ROOT/lib/mdns-0.1.0/ebin","$ROOT/lib/backyard-0.1.0/ebin",
          "$ROOT/lib/compiler-4.8.1/ebin","$ROOT/lib/crypto-2.1/ebin",
          "$ROOT/lib/syntax_tools-1.6.8/ebin","$ROOT/lib/edoc-0.7.9.1/ebin",
          "$ROOT/lib/edown-0.2.9/ebin","$ROOT/lib/public_key-0.15/ebin",
          "$ROOT/lib/ssl-5.0.1/ebin","$ROOT/lib/lhttpc-1.2.6/ebin",
          "$ROOT/lib/erllibcloudapi-0.1.5/ebin",
          "$ROOT/lib/gen_leader-1.0/ebin","$ROOT/lib/gproc-0.2.10/ebin",
          "$ROOT/lib/inets-5.9/ebin","$ROOT/lib/nicedecimal-1.0/ebin",
          "$ROOT/lib/jsx-1.1.2/ebin","$ROOT/lib/lager-1.0.0/ebin",
          "$ROOT/lib/libchunter-0.1.2/ebin","$ROOT/lib/libsnarl-0.1.4/ebin",
          "$ROOT/lib/meck-0.7.2/ebin",
          "$ROOT/lib/parse_trans-2.4-1-g11f137a/ebin","$ROOT/lib/redo/ebin",
          "$ROOT/lib/uuid-0.3.3/ebin","$ROOT/lib/statsderl-0.2/ebin",
          "$ROOT/lib/vmstats-0.1/ebin","$ROOT/lib/sniffle-0.2.0/ebin",
          "$ROOT/lib/syslog-0.0.1/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,error_logger,{error_logger,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"2.15.1"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,packages,code_server,
                        dist_util,erl_boot_server,erl_distribution,erl_reply,
                        error_handler,error_logger,file,file_server,
                        file_io_server,global,global_group,global_search,
                        group,heart,hipe_unified_loader,inet6_tcp,
                        inet6_tcp_dist,inet6_udp,inet6_sctp,inet_config,
                        inet_hosts,inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,net,net_adm,net_kernel,os,ram_file,rpc,
                        user,user_drv,user_sup,disk_log,disk_log_1,
                        disk_log_server,disk_log_sup,dist_ac,erl_ddll,
                        erl_epmd,erts_debug,gen_tcp,gen_udp,gen_sctp,inet,
                        inet_db,inet_dns,inet_parse,inet_res,inet_tcp,
                        inet_udp,inet_sctp,pg2,seq_trace,standard_error,
                        wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_sup,net_kernel,net_sup,rex,
                        user,os_server,ddll_server,erl_epmd,inet_db,pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,[{error_logger,tty}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"1.18.1"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v8,dets_v9,dict,
                        digraph,digraph_utils,edlin,edlin_expand,epp,
                        eval_bits,erl_bits,erl_compile,erl_eval,
                        erl_expand_records,erl_internal,erl_lint,erl_parse,
                        erl_posix_msg,erl_pp,erl_scan,erl_tar,
                        error_logger_file_h,error_logger_tty_h,escript,ets,
                        file_sorter,filelib,filename,gb_trees,gb_sets,gen,
                        gen_event,gen_fsm,gen_server,io,io_lib,io_lib_format,
                        io_lib_fread,io_lib_pretty,lib,lists,log_mf_h,math,
                        ms_transform,orddict,ordsets,otp_internal,pg,pool,
                        proc_lib,proplists,qlc,qlc_pt,queue,random,re,sets,
                        shell,shell_default,slave,sofs,string,supervisor,
                        supervisor_bridge,sys,timer,unicode,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"2.2.1"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,overload,
                        rb,rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,si,si_sasl_supp,systools,
                        systools_make,systools_rc,systools_relup,
                        systools_lib]},
                   {registered,
                       [sasl_sup,alarm_handler,overload,release_handler]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[{sasl_error_logger,tty},{errlog_type,all}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {apply,
         {application,load,
             [{application,alog,
                  [{description,"Abstract logger (alog)"},
                   {vsn,"1"},
                   {id,[]},
                   {modules,
                       [alog,alog_common_formatter,alog_config,alog_control,
                        alog_disk_log,alog_error_logger_handler,alog_examples,
                        alog_if_default,alog_parse_trans,alog_pt,alog_scribe,
                        alog_sup,alog_syslog,alog_test_logger_iface,
                        alog_tests,alog_tty,facebookService_thrift,gen_alog,
                        scribe_thrift,scribe_types]},
                   {registered,[]},
                   {applications,[kernel,stdlib,sasl]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{alog,[]}}]}]}},
     {apply,
         {application,load,
             [{application,mdns,
                  [{description,"mDNS Erlang Node Discovery"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       [mdns,mdns_application,
                        mdns_discovery_connect_node_handler,
                        mdns_node_discovery,mdns_node_discovery_event,
                        mdns_node_discovery_server,mdns_supervisor]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,
                       [{port,5353},
                        {address,{224,0,0,251}},
                        {domain,".local"},
                        {type,"_erlang._tcp"}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{mdns_application,[]}}]}]}},
     {apply,
         {application,load,
             [{application,backyard,
                  [{description,"Clustering library"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       [backyard_app,backyard_quorum,backyard_srv,
                        backyard_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib,mdns]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{backyard_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"4.8.1"},
                   {id,[]},
                   {modules,
                       [beam_asm,beam_block,beam_bool,beam_bsm,beam_clean,
                        beam_dead,beam_dict,beam_disasm,beam_except,
                        beam_flatten,beam_jump,beam_listing,beam_opcodes,
                        beam_peep,beam_receive,beam_split,beam_trim,beam_type,
                        beam_utils,beam_validator,cerl,cerl_clauses,
                        cerl_inline,cerl_trees,compile,core_scan,core_lint,
                        core_parse,core_pp,core_lib,erl_bifs,rec_env,
                        sys_core_dsetel,sys_core_fold,sys_core_inline,
                        sys_expand_pmod,sys_pre_attributes,sys_pre_expand,
                        v3_codegen,v3_core,v3_kernel,v3_kernel_pp,v3_life]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO version 2"},
                   {vsn,"2.1"},
                   {id,[]},
                   {modules,[crypto,crypto_app,crypto_sup,crypto_server]},
                   {registered,[crypto_sup,crypto_server]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{crypto_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,syntax_tools,
                  [{description,"Syntax tools"},
                   {vsn,"1.6.8"},
                   {id,[]},
                   {modules,
                       [epp_dodger,erl_comment_scan,erl_prettypr,
                        erl_recomment,erl_syntax,erl_syntax_lib,erl_tidy,igor,
                        prettypr]},
                   {registered,[]},
                   {applications,[stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,edoc,
                  [{description,"EDoc"},
                   {vsn,"0.7.9.1"},
                   {id,[]},
                   {modules,
                       [edoc,edoc_data,edoc_doclet,edoc_extract,edoc_layout,
                        edoc_lib,edoc_macros,edoc_parser,edoc_refs,
                        edoc_report,edoc_run,edoc_scanner,edoc_specs,
                        edoc_tags,edoc_types,edoc_wiki,otpsgml_layout]},
                   {registered,[]},
                   {applications,[compiler,kernel,stdlib,syntax_tools]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,edown,
                  [{description,"Markdown extension for EDoc"},
                   {vsn,"0.2.9"},
                   {id,[]},
                   {modules,
                       [edown_doclet,edown_layout,edown_lib,edown_make,
                        edown_xmerl]},
                   {registered,[]},
                   {applications,[kernel,stdlib,edoc]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"0.15"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_cert_records,'OTP-PUB-KEY',
                        'PKCS-FRAME']},
                   {registered,[]},
                   {applications,[crypto,kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"5.0.1"},
                   {id,[]},
                   {modules,
                       [ssl,ssl_app,ssl_sup,inet_tls_dist,ssl_tls_dist_proxy,
                        ssl_dist_sup,ssl_tls1,ssl_ssl3,ssl_ssl2,ssl_session,
                        ssl_session_cache_api,ssl_session_cache,ssl_record,
                        ssl_manager,ssl_handshake,ssl_debug,
                        ssl_connection_sup,ssl_connection,ssl_cipher,
                        ssl_certificate_db,ssl_certificate,ssl_alert]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[crypto,public_key,kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,lhttpc,
                  [{description,"Lightweight HTTP Client"},
                   {vsn,"1.2.6"},
                   {id,[]},
                   {modules,
                       [lhttpc,lhttpc_client,lhttpc_lib,lhttpc_manager,
                        lhttpc_sock,lhttpc_sup]},
                   {registered,[lhttpc_manager]},
                   {applications,[kernel,stdlib,ssl,crypto]},
                   {included_applications,[]},
                   {env,[{connection_timeout,300000}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{lhttpc,nil}}]}]}},
     {apply,
         {application,load,
             [{application,erllibcloudapi,
                  [{description,[]},
                   {vsn,"0.1.5"},
                   {id,[]},
                   {modules,[bark,cloudapi]},
                   {registered,[]},
                   {applications,[kernel,stdlib,public_key,lhttpc,alog]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,gen_leader,
                  [{description,"The gen_leader behaviour"},
                   {vsn,"1.0"},
                   {id,"gen_leader"},
                   {modules,[gen_leader]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,gproc,
                  [{description,"GPROC"},
                   {vsn,"0.2.10"},
                   {id,"GPROC"},
                   {modules,
                       [gproc,gproc_app,gproc_dist,gproc_init,gproc_lib,
                        gproc_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{gproc_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,inets,
                  [{description,"INETS  CXC 138 49"},
                   {vsn,"5.9"},
                   {id,[]},
                   {modules,
                       [inets,inets_sup,inets_app,inets_service,inets_regexp,
                        inets_trace,ftp,ftp_progress,ftp_response,ftp_sup,
                        httpc,httpc_handler,httpc_handler_sup,httpc_manager,
                        httpc_profile_sup,httpc_request,httpc_response,
                        httpc_sup,httpc_cookie,http_uri,http_chunk,
                        http_request,http_response,http_transport,http_util,
                        httpd,httpd_acceptor,httpd_acceptor_sup,httpd_cgi,
                        httpd_conf,httpd_esi,httpd_example,httpd_file,
                        httpd_instance_sup,httpd_log,httpd_manager,
                        httpd_misc_sup,httpd_request,httpd_request_handler,
                        httpd_response,httpd_script_env,httpd_socket,
                        httpd_sup,httpd_util,mod_actions,mod_alias,mod_auth,
                        mod_auth_dets,mod_auth_mnesia,mod_auth_plain,
                        mod_auth_server,mod_browser,mod_cgi,mod_dir,
                        mod_disk_log,mod_esi,mod_get,mod_head,mod_htaccess,
                        mod_include,mod_log,mod_range,mod_responsecontrol,
                        mod_security,mod_security_server,mod_trace,tftp,
                        tftp_binary,tftp_engine,tftp_file,tftp_lib,
                        tftp_logger,tftp_sup]},
                   {registered,[inets_sup,httpc_manager]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{inets_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,nicedecimal,
                  [{description,
                       "a tiny library for outputting shortest string representations of ieee754 floats in erlang"},
                   {vsn,"1.0"},
                   {id,[]},
                   {modules,[nicedecimal]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,jsx,
                  [{description,"a streaming, evented json parsing toolkit"},
                   {vsn,"1.1.2"},
                   {id,[]},
                   {modules,
                       [jsx,jsx_decoder,jsx_encoder,jsx_to_json,jsx_to_term,
                        jsx_utils,jsx_verify]},
                   {registered,[]},
                   {applications,[kernel,stdlib,nicedecimal]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,lager,
                  [{description,"Erlang logging framework"},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,
                       [error_logger_lager_h,lager,lager_app,
                        lager_console_backend,lager_crash_log,
                        lager_file_backend,lager_format,lager_handler_watcher,
                        lager_handler_watcher_sup,lager_mochiglobal,
                        lager_stdlib,lager_sup,lager_transform,lager_trunc_io,
                        lager_util]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,
                       [{handlers,
                            [{lager_console_backend,info},
                             {lager_file_backend,
                                 [{"log/error.log",error,10485760,"$D0",5},
                                  {"log/console.log",info,10485760,"$D0",
                                   5}]}]},
                        {crash_log,"log/crash.log"},
                        {crash_log_msg_size,65536},
                        {crash_log_size,10485760},
                        {crash_log_date,"$D0"},
                        {crash_log_count,5},
                        {error_logger_redirect,true}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{lager_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,libchunter,
                  [{description,"Chunter interface library."},
                   {vsn,"0.1.2"},
                   {id,[]},
                   {modules,[libchunter,libchunter_app,libchunter_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib,lager,backyard]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{libchunter_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,libsnarl,
                  [{description,"API for calling the snarl RBAC server."},
                   {vsn,"0.1.4"},
                   {id,[]},
                   {modules,[libsnarl,libsnarl_app,libsnarl_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib,lager,backyard]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{libsnarl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,meck,
                  [{description,"A mocking framework for Erlang"},
                   {vsn,"0.7.2"},
                   {id,[]},
                   {modules,[meck,meck_cover,meck_mod]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,parse_trans,
                  [{description,"Parse transform library"},
                   {vsn,"2.4-1-g11f137a"},
                   {id,[]},
                   {modules,
                       [ct_expand,exprecs,parse_trans,parse_trans_codegen,
                        parse_trans_mod,parse_trans_pp]},
                   {registered,[]},
                   {applications,[kernel,stdlib,syntax_tools]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,redo,
                  [{description,[]},
                   {vsn,[]},
                   {id,[]},
                   {modules,[]},
                   {registered,[]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,uuid,
                  [{description,"Erlang UUID"},
                   {vsn,"0.3.3"},
                   {id,[]},
                   {modules,[uuid]},
                   {registered,[]},
                   {applications,[stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,statsderl,
                  [{description,"StatsD client"},
                   {vsn,"0.2"},
                   {id,[]},
                   {modules,[statsderl,statsderl_app,statsderl_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[{hostname,{127,0,0,1}},{port,8125}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{statsderl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,vmstats,
                  [{description,
                       "Tiny application to gather VM statistics for StatsD client"},
                   {vsn,"0.1"},
                   {id,[]},
                   {modules,[vmstats,vmstats_server,vmstats_sup]},
                   {registered,[vmstats_sup,vmstats_server]},
                   {applications,[statsderl]},
                   {included_applications,[]},
                   {env,[{delay,5000}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{vmstats,[]}}]}]}},
     {apply,
         {application,load,
             [{application,sniffle,
                  [{description,"Central cloud management server."},
                   {vsn,"0.2.0"},
                   {id,[]},
                   {modules,
                       [sniffle_app,sniffle_host_srv,sniffle_host_sup,
                        sniffle_impl,sniffle_impl_bark,sniffle_impl_chunter,
                        sniffle_impl_cloudapi,sniffle_server,sniffle_sup]},
                   {registered,[]},
                   {applications,
                       [kernel,erllibcloudapi,redo,backyard,sasl,alog,uuid,
                        libsnarl,libchunter,statsderl,vmstats,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sniffle_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,syslog,
                  [{description,"Syslog for erlang"},
                   {vsn,"0.0.1"},
                   {id,[]},
                   {modules,[syslog,syslog_app,syslog_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{syslog_app,[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.

